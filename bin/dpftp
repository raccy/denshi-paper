#!/usr/bin/env ruby
# frozen_string_literal: true

begin
  require 'denshi_paper'
rescue LoadError
  $: << File.expand_path('../lib', __dir__)
  require 'denshi_paper'
end

require 'optparse'

if $0 == __FILE__
  opt = OptionParser.new
  opt.version = DenshiPaper::VERSION

  workspace = nil
  client_id = nil
  private_key_file = nil
  private_key_pass = nil
  serial_number = nil

  opt.on('-w', '--workspace=WORKSPACE',
    'warkspace for the device') { |v| workspace = v }
  opt.on('-i', '--id=CLIENT_UUID',
    'client uuid for the device') { |v| client_id = v }
  opt.on('-k', '--key=PRIVATE_KEY_FILE',
    'private key file for the device') { |v| private_key_file = v }
  opt.on('-p', '--pass=PRIVATE_KEY_PASS',
    'private key passphrase for the device') { |v| private_key_pass = v }
  opt.on('-s', '--serial=SERIAL_NUMBER',
    'serial number of the device') { |v| serial_number = v }
  opt.on('-d', '--debug', 'debug mode') { |v| $DEBUG = v }

  opt.parse!(ARGV)

  if workspace
    client_id ||= IO.read(File.join(workspace, 'deviceid.dat')).strip
    private_key_file ||= File.join(workspace, 'privatekey.dat')
    serial_number ||= IO.read(File.join(workspace, 'workspace.dat')).strip
  end
  unless client_id && private_key_file && serial_number
    puts opt.help
    exit
  end
  private_key = IO.read(private_key_file)

  disc = DenshiPaper::Discovery.new
  device = disc.search_device(serial_number)
  client = DenshiPaper::Client.new(device, client_id, private_key,
    private_key_pass)
  client.root_folder.each do |entry|
    puts "#{entry.type}: #{entry.name}"
  end
end
